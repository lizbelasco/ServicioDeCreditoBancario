/**
 * 
 */
package com.buro.business;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.buro.dao.PagoCreditoDao;
import com.buro.dto.FilaTablaAmortizacion;
import com.buro.dto.RequestPagoCredito;
import com.buro.dto.RespuestaPagoCredito;

/**
 * 
 */
@Component
public class PagoCreditoBusiness {

	@Autowired
	private PagoCreditoDao dao;

	public RespuestaPagoCredito pagar(RequestPagoCredito request) {
		RespuestaPagoCredito resp = new RespuestaPagoCredito();
		int contador = dao.obtenerPagos(request.getRfc());
		// request.setMeses(dao.obtenerPagos(request.getRfc()));

		// Verificar si ya se han realizado todos los pagos
		if (contador >= request.getMes()) {
			resp.setMensaje("Ya se han realizado todos los pagos");
			return resp;
		}

		dao.pagoRealizado(request.getRfc(), contador + 1);
		resp.setRfc(request.getRfc());
		resp.setTablaAmortizacion(request.getTablaAmortizacion());
		resp.setMensaje("Se realizó el pago correctamente");

		return resp;
	}

	public RespuestaPagoCredito pagarExtra(RequestPagoCredito request) {
		RespuestaPagoCredito resp = new RespuestaPagoCredito();
		int contador = dao.obtenerPagos(request.getRfc());
		double prestamo = dao.obtenerPrestamo(request.getRfc());
		List<FilaTablaAmortizacion> tablaAmortizacion = request.getTablaAmortizacion();
		double pagoExtra = request.getPagoExtra();

		for (int i = contador; i < request.getTablaAmortizacion().size(); i++) {
			// System.out.println(contador);
			double balance = tablaAmortizacion.get(i).getBalance();
			double porcentaje = request.getPorcentaje() / 100;
			double pagoMensual = tablaAmortizacion.get(i).getPago();
			double interes = tablaAmortizacion.get(i).getInteres();
			double capital = tablaAmortizacion.get(i).getCapital();
			double totalIntereses = tablaAmortizacion.get(i).getTotalInteres();
			/*
			 * System.out.println("0" + prestamo); System.out.println("1" + balance);
			 * System.out.println("3" + pagoMensual); System.out.println("4" + pagoExtra);
			 * System.out.println("5" + interes); System.out.println("6" + capital);
			 * System.out.println("7" + totalIntereses);
			 */

			if (i == 0) {
				// setear a la tablaAmortizacion el pagoMensual
				tablaAmortizacion.get(i).setPago(pagoMensual);
				tablaAmortizacion.get(i).setInteres(interes);
				tablaAmortizacion.get(i).setCapital(capital);
				tablaAmortizacion.get(i)
						.setBalance(((prestamo + ((prestamo * porcentaje) / 12)) - pagoMensual - pagoExtra));
				tablaAmortizacion.get(i).setTotalInteres(interes);
			} else {
				// Se obtienen los valores de la fila anterior para la comprobacion
				double pagoMensualAnterior = tablaAmortizacion.get(i - 1).getPago();
				double interesAnterior = tablaAmortizacion.get(i - 1).getTotalInteres();
				double balanceAnterior = tablaAmortizacion.get(i - 1).getBalance();
				// System.out.println("2" + porcentaje);
				// Comprobacion de pagoMensual

				if (pagoMensual > (pagoMensualAnterior - interesAnterior)) {
					tablaAmortizacion.get(i).setPago(pagoMensual);
				} else if (i == tablaAmortizacion.size() - 1) {
					tablaAmortizacion.get(i).setPago(balanceAnterior + interes);
				}

				tablaAmortizacion.get(i).setInteres(balanceAnterior * porcentaje / 12);
				// System.out.println("2" + tablaAmortizacion.get(i).getInteres());

				if (balanceAnterior > (pagoMensual - interes)) {
					tablaAmortizacion.get(i).setCapital(pagoMensual - interes);
				} else {
					tablaAmortizacion.get(i).setCapital(balanceAnterior);
				}

				if (((balanceAnterior + ((balanceAnterior * porcentaje) / 12)) - pagoMensual - pagoExtra) > 0) {
					tablaAmortizacion.get(i).setBalance(
							((balanceAnterior + ((balanceAnterior * porcentaje) / 12)) - pagoMensual - pagoExtra));
				} else {
					tablaAmortizacion.get(i).setBalance(0);
				}
				tablaAmortizacion.get(i).setTotalInteres(interesAnterior + interes);
				System.out.println(tablaAmortizacion.get(i).getTotalInteres());
			}
		}

		dao.pagoRealizado(request.getRfc(), contador + 1);
		int contador2 = dao.obtenerPagos(request.getRfc());
		tablaAmortizacion.get(contador2 - 1).setPagoExtra(pagoExtra);
		resp.setRfc(request.getRfc());
		resp.setTablaAmortizacion(tablaAmortizacion);
		resp.setMensaje("Se realizó el pago correctamente con un monto extra");
		return resp;
	}

}